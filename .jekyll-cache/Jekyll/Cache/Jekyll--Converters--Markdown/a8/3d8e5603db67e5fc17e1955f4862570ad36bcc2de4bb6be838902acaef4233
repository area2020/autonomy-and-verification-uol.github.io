I"6<p>I find myself getting closer to the point where Iâ€™m done with the scaffolding and can finally start with the design. The more fun stuff I look at the more I realize that integrating Compass is probably a good idea.</p>

<p>I donâ€™t like plugins unless absolutely necessarry so while Iâ€™m sure the jekyll-compass plugin is great, I decided to figure out how to add Compass to my Jekyll/Octopress 3 site without any plugins.</p>

<p>Hereâ€™s what I did.</p>

<ul>
  <li>Add compass to your gemfile</li>
  <li>Install compass
<code class="highlighter-rouge">bundle install --binstubs --path=vendor</code></li>
  <li>Run Compass for the first time so it generates a config file
<code class="highlighter-rouge">bundle exec compass create --bare --sass-dir "_sass" --css-dir "css" --images-dir "images"</code>
    <ul>
      <li>This command creates a config.rb file wiht compass settings that are compatible with Jekyll</li>
    </ul>
  </li>
  <li>Move the default Jekyll css/main.css to _sass/main.css
    <ul>
      <li>remove the yaml frontmatter from the file once youâ€™ve moved it to the _sass directory</li>
    </ul>
  </li>
  <li>Delete the css directory</li>
  <li>Update rakefile to run compass compile before building</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>desc "build the site"
task :build do
  system "bundle exec compass compile"
  system "bundle exec jekyll build"
  system "bundle exec rake minify_html"
  system "bundle exec rake optimizeimages"
end
</code></pre></div></div>
<ul>
  <li>Run <code class="highlighter-rouge">bundle exec rake build</code></li>
  <li>
    <p>NOTE - compression settings are no longer set in _config.yml, youâ€™ll need to add the following line to <code class="highlighter-rouge">config.rb</code> in oroder to compress css
<code class="highlighter-rouge">output_style = :compressed</code></p>
  </li>
  <li>Update rakefile to run compass watch and jekyll serve together</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##############
#   Develop  #
##############

# Useful for development
# It watches for chagnes and updates when it finds them

desc "Watch the site and regenerate when it changes"
task :watch do
  puts "Starting to watch source with Jekyll and Compass."
  system "compass compile" unless File.exist?("css/main.css")
  system "jekyll build"
  jekyllPid = Process.spawn("jekyll serve --watch")
  compassPid = Process.spawn("compass watch")

  trap("INT") {
    [jekyllPid, compassPid].each { |pid| Process.kill(9, pid) rescue Errno::ESRCH }
    exit 0
  }

  [jekyllPid, compassPid].each { |pid| Process.wait(pid) }
end
</code></pre></div></div>
<ul>
  <li>Now you can run <code class="highlighter-rouge">bundle exec rake watch</code> and it runs compass watch &amp; jekyll serve together.</li>
</ul>

<p>Now you can use Compass mixins and import partials by adding <code class="highlighter-rouge">@import compass/blahblahblah</code> to your _sass/main.scss file.
Running <code class="highlighter-rouge">bundle exec rake build</code> will then run <code class="highlighter-rouge">compass compile</code> to create your css/main.scss file, followed by <code class="highlighter-rouge">jekyll build</code> which will move that css/main.scss to _site/css/main.css</p>

<p>In short:</p>

<ul>
  <li>you can store any partials you want to in the _sass directory (or subdirectories)</li>
  <li>you can import these partials via your main.scss file</li>
  <li>any partials imported will be compiled into a single file (css/main.scss) when you run <code class="highlighter-rouge">compass compile</code></li>
  <li>the css/main.scss file will be built into _site/css/main.css when you run <code class="highlighter-rouge">jekyll build</code></li>
  <li>any partials not imported by your _sass/main.scss file will not be used</li>
</ul>
:ET